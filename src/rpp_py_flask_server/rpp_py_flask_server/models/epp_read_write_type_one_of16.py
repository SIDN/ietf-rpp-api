from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.contact_update_type import ContactUpdateType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.contact_update_type import ContactUpdateType  # noqa: E501

class EppReadWriteTypeOneOf16(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_update=None):  # noqa: E501
        """EppReadWriteTypeOneOf16 - a model defined in OpenAPI

        :param contact_update: The contact_update of this EppReadWriteTypeOneOf16.  # noqa: E501
        :type contact_update: ContactUpdateType
        """
        self.openapi_types = {
            'contact_update': ContactUpdateType
        }

        self.attribute_map = {
            'contact_update': 'contact_update'
        }

        self._contact_update = contact_update

    @classmethod
    def from_dict(cls, dikt) -> 'EppReadWriteTypeOneOf16':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_readWriteType_oneOf_16 of this EppReadWriteTypeOneOf16.  # noqa: E501
        :rtype: EppReadWriteTypeOneOf16
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_update(self) -> ContactUpdateType:
        """Gets the contact_update of this EppReadWriteTypeOneOf16.


        :return: The contact_update of this EppReadWriteTypeOneOf16.
        :rtype: ContactUpdateType
        """
        return self._contact_update

    @contact_update.setter
    def contact_update(self, contact_update: ContactUpdateType):
        """Sets the contact_update of this EppReadWriteTypeOneOf16.


        :param contact_update: The contact_update of this EppReadWriteTypeOneOf16.
        :type contact_update: ContactUpdateType
        """
        if contact_update is None:
            raise ValueError("Invalid value for `contact_update`, must not be `None`")  # noqa: E501

        self._contact_update = contact_update
