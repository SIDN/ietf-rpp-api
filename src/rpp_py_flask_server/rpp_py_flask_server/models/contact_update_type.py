from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.contact_add_rem_type import ContactAddRemType
from rpp_py_flask_server.models.contact_chg_type import ContactChgType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.contact_add_rem_type import ContactAddRemType  # noqa: E501
from rpp_py_flask_server.models.contact_chg_type import ContactChgType  # noqa: E501

class ContactUpdateType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add=None, chg=None, id=None, rem=None):  # noqa: E501
        """ContactUpdateType - a model defined in OpenAPI

        :param add: The add of this ContactUpdateType.  # noqa: E501
        :type add: ContactAddRemType
        :param chg: The chg of this ContactUpdateType.  # noqa: E501
        :type chg: ContactChgType
        :param id: The id of this ContactUpdateType.  # noqa: E501
        :type id: str
        :param rem: The rem of this ContactUpdateType.  # noqa: E501
        :type rem: ContactAddRemType
        """
        self.openapi_types = {
            'add': ContactAddRemType,
            'chg': ContactChgType,
            'id': str,
            'rem': ContactAddRemType
        }

        self.attribute_map = {
            'add': 'add',
            'chg': 'chg',
            'id': 'id',
            'rem': 'rem'
        }

        self._add = add
        self._chg = chg
        self._id = id
        self._rem = rem

    @classmethod
    def from_dict(cls, dikt) -> 'ContactUpdateType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The contact_updateType of this ContactUpdateType.  # noqa: E501
        :rtype: ContactUpdateType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add(self) -> ContactAddRemType:
        """Gets the add of this ContactUpdateType.


        :return: The add of this ContactUpdateType.
        :rtype: ContactAddRemType
        """
        return self._add

    @add.setter
    def add(self, add: ContactAddRemType):
        """Sets the add of this ContactUpdateType.


        :param add: The add of this ContactUpdateType.
        :type add: ContactAddRemType
        """

        self._add = add

    @property
    def chg(self) -> ContactChgType:
        """Gets the chg of this ContactUpdateType.


        :return: The chg of this ContactUpdateType.
        :rtype: ContactChgType
        """
        return self._chg

    @chg.setter
    def chg(self, chg: ContactChgType):
        """Sets the chg of this ContactUpdateType.


        :param chg: The chg of this ContactUpdateType.
        :type chg: ContactChgType
        """

        self._chg = chg

    @property
    def id(self) -> str:
        """Gets the id of this ContactUpdateType.


        :return: The id of this ContactUpdateType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ContactUpdateType.


        :param id: The id of this ContactUpdateType.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501
        if id is not None and len(id) > 16:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `16`")  # noqa: E501
        if id is not None and len(id) < 3:
            raise ValueError("Invalid value for `id`, length must be greater than or equal to `3`")  # noqa: E501

        self._id = id

    @property
    def rem(self) -> ContactAddRemType:
        """Gets the rem of this ContactUpdateType.


        :return: The rem of this ContactUpdateType.
        :rtype: ContactAddRemType
        """
        return self._rem

    @rem.setter
    def rem(self, rem: ContactAddRemType):
        """Sets the rem of this ContactUpdateType.


        :param rem: The rem of this ContactUpdateType.
        :type rem: ContactAddRemType
        """

        self._rem = rem
