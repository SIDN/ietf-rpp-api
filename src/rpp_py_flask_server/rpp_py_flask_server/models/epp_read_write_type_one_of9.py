from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.host_s_name_type import HostSNameType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.host_s_name_type import HostSNameType  # noqa: E501

class EppReadWriteTypeOneOf9(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_info=None):  # noqa: E501
        """EppReadWriteTypeOneOf9 - a model defined in OpenAPI

        :param host_info: The host_info of this EppReadWriteTypeOneOf9.  # noqa: E501
        :type host_info: HostSNameType
        """
        self.openapi_types = {
            'host_info': HostSNameType
        }

        self.attribute_map = {
            'host_info': 'host_info'
        }

        self._host_info = host_info

    @classmethod
    def from_dict(cls, dikt) -> 'EppReadWriteTypeOneOf9':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_readWriteType_oneOf_9 of this EppReadWriteTypeOneOf9.  # noqa: E501
        :rtype: EppReadWriteTypeOneOf9
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_info(self) -> HostSNameType:
        """Gets the host_info of this EppReadWriteTypeOneOf9.


        :return: The host_info of this EppReadWriteTypeOneOf9.
        :rtype: HostSNameType
        """
        return self._host_info

    @host_info.setter
    def host_info(self, host_info: HostSNameType):
        """Sets the host_info of this EppReadWriteTypeOneOf9.


        :param host_info: The host_info of this EppReadWriteTypeOneOf9.
        :type host_info: HostSNameType
        """
        if host_info is None:
            raise ValueError("Invalid value for `host_info`, must not be `None`")  # noqa: E501

        self._host_info = host_info
