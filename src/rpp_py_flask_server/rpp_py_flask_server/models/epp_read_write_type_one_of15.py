from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.contact_auth_id_type import ContactAuthIDType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.contact_auth_id_type import ContactAuthIDType  # noqa: E501

class EppReadWriteTypeOneOf15(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_transfer=None):  # noqa: E501
        """EppReadWriteTypeOneOf15 - a model defined in OpenAPI

        :param contact_transfer: The contact_transfer of this EppReadWriteTypeOneOf15.  # noqa: E501
        :type contact_transfer: ContactAuthIDType
        """
        self.openapi_types = {
            'contact_transfer': ContactAuthIDType
        }

        self.attribute_map = {
            'contact_transfer': 'contact_transfer'
        }

        self._contact_transfer = contact_transfer

    @classmethod
    def from_dict(cls, dikt) -> 'EppReadWriteTypeOneOf15':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_readWriteType_oneOf_15 of this EppReadWriteTypeOneOf15.  # noqa: E501
        :rtype: EppReadWriteTypeOneOf15
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_transfer(self) -> ContactAuthIDType:
        """Gets the contact_transfer of this EppReadWriteTypeOneOf15.


        :return: The contact_transfer of this EppReadWriteTypeOneOf15.
        :rtype: ContactAuthIDType
        """
        return self._contact_transfer

    @contact_transfer.setter
    def contact_transfer(self, contact_transfer: ContactAuthIDType):
        """Sets the contact_transfer of this EppReadWriteTypeOneOf15.


        :param contact_transfer: The contact_transfer of this EppReadWriteTypeOneOf15.
        :type contact_transfer: ContactAuthIDType
        """
        if contact_transfer is None:
            raise ValueError("Invalid value for `contact_transfer`, must not be `None`")  # noqa: E501

        self._contact_transfer = contact_transfer
