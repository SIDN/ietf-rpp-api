from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.sec_dns_update_type import SecDNSUpdateType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.sec_dns_update_type import SecDNSUpdateType  # noqa: E501

class EppReadWriteTypeOneOf18(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sec_dns_update=None):  # noqa: E501
        """EppReadWriteTypeOneOf18 - a model defined in OpenAPI

        :param sec_dns_update: The sec_dns_update of this EppReadWriteTypeOneOf18.  # noqa: E501
        :type sec_dns_update: SecDNSUpdateType
        """
        self.openapi_types = {
            'sec_dns_update': SecDNSUpdateType
        }

        self.attribute_map = {
            'sec_dns_update': 'secDNS_update'
        }

        self._sec_dns_update = sec_dns_update

    @classmethod
    def from_dict(cls, dikt) -> 'EppReadWriteTypeOneOf18':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_readWriteType_oneOf_18 of this EppReadWriteTypeOneOf18.  # noqa: E501
        :rtype: EppReadWriteTypeOneOf18
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sec_dns_update(self) -> SecDNSUpdateType:
        """Gets the sec_dns_update of this EppReadWriteTypeOneOf18.


        :return: The sec_dns_update of this EppReadWriteTypeOneOf18.
        :rtype: SecDNSUpdateType
        """
        return self._sec_dns_update

    @sec_dns_update.setter
    def sec_dns_update(self, sec_dns_update: SecDNSUpdateType):
        """Sets the sec_dns_update of this EppReadWriteTypeOneOf18.


        :param sec_dns_update: The sec_dns_update of this EppReadWriteTypeOneOf18.
        :type sec_dns_update: SecDNSUpdateType
        """
        if sec_dns_update is None:
            raise ValueError("Invalid value for `sec_dns_update`, must not be `None`")  # noqa: E501

        self._sec_dns_update = sec_dns_update
