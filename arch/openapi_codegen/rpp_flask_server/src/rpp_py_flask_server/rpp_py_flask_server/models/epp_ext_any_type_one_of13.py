from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.contact_pan_data_type import ContactPanDataType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.contact_pan_data_type import ContactPanDataType  # noqa: E501

class EppExtAnyTypeOneOf13(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_pan_data=None):  # noqa: E501
        """EppExtAnyTypeOneOf13 - a model defined in OpenAPI

        :param contact_pan_data: The contact_pan_data of this EppExtAnyTypeOneOf13.  # noqa: E501
        :type contact_pan_data: ContactPanDataType
        """
        self.openapi_types = {
            'contact_pan_data': ContactPanDataType
        }

        self.attribute_map = {
            'contact_pan_data': 'contact_panData'
        }

        self._contact_pan_data = contact_pan_data

    @classmethod
    def from_dict(cls, dikt) -> 'EppExtAnyTypeOneOf13':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_extAnyType_oneOf_13 of this EppExtAnyTypeOneOf13.  # noqa: E501
        :rtype: EppExtAnyTypeOneOf13
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_pan_data(self) -> ContactPanDataType:
        """Gets the contact_pan_data of this EppExtAnyTypeOneOf13.


        :return: The contact_pan_data of this EppExtAnyTypeOneOf13.
        :rtype: ContactPanDataType
        """
        return self._contact_pan_data

    @contact_pan_data.setter
    def contact_pan_data(self, contact_pan_data: ContactPanDataType):
        """Sets the contact_pan_data of this EppExtAnyTypeOneOf13.


        :param contact_pan_data: The contact_pan_data of this EppExtAnyTypeOneOf13.
        :type contact_pan_data: ContactPanDataType
        """
        if contact_pan_data is None:
            raise ValueError("Invalid value for `contact_pan_data`, must not be `None`")  # noqa: E501

        self._contact_pan_data = contact_pan_data
