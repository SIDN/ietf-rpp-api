from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpp_py_flask_server.models.base_model import Model
from rpp_py_flask_server.models.sec_dnsds_or_key_type import SecDNSDsOrKeyType
from rpp_py_flask_server import util

from rpp_py_flask_server.models.sec_dnsds_or_key_type import SecDNSDsOrKeyType  # noqa: E501

class EppReadWriteTypeOneOf17(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sec_dns_create=None):  # noqa: E501
        """EppReadWriteTypeOneOf17 - a model defined in OpenAPI

        :param sec_dns_create: The sec_dns_create of this EppReadWriteTypeOneOf17.  # noqa: E501
        :type sec_dns_create: SecDNSDsOrKeyType
        """
        self.openapi_types = {
            'sec_dns_create': SecDNSDsOrKeyType
        }

        self.attribute_map = {
            'sec_dns_create': 'secDNS_create'
        }

        self._sec_dns_create = sec_dns_create

    @classmethod
    def from_dict(cls, dikt) -> 'EppReadWriteTypeOneOf17':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_readWriteType_oneOf_17 of this EppReadWriteTypeOneOf17.  # noqa: E501
        :rtype: EppReadWriteTypeOneOf17
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sec_dns_create(self) -> SecDNSDsOrKeyType:
        """Gets the sec_dns_create of this EppReadWriteTypeOneOf17.


        :return: The sec_dns_create of this EppReadWriteTypeOneOf17.
        :rtype: SecDNSDsOrKeyType
        """
        return self._sec_dns_create

    @sec_dns_create.setter
    def sec_dns_create(self, sec_dns_create: SecDNSDsOrKeyType):
        """Sets the sec_dns_create of this EppReadWriteTypeOneOf17.


        :param sec_dns_create: The sec_dns_create of this EppReadWriteTypeOneOf17.
        :type sec_dns_create: SecDNSDsOrKeyType
        """
        if sec_dns_create is None:
            raise ValueError("Invalid value for `sec_dns_create`, must not be `None`")  # noqa: E501

        self._sec_dns_create = sec_dns_create
